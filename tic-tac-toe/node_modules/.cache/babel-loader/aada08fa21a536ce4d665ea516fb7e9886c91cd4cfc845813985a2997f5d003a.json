{"ast":null,"code":"var _jsxFileName = \"/Users/cocoli/Desktop/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\n// Chorus Lapilli\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [movePiece, setMovePiece] = useState(null);\n  let xCount = 0;\n  let oCount = 0;\n  for (let i = 0; i < squares.length; i++) {\n    //helps check to make sure only 3 pieces are on the board \n    if (squares[i] == \"X\") {\n      xCount++;\n    } else if (squares[i] == \"O\") {\n      oCount++;\n    }\n  }\n  function handleClick(i) {\n    if (calculateWinner(squares)) {\n      //returns early if there is something on that square \n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext && xCount === 3) {\n      console.log(\"Move Piece:\", movePiece);\n      if (squares[i] === \"X\") {\n        setMovePiece(i); //first click, log this index\n      } else if (isValidMove(movePiece, i, nextSquares, \"X\")) {\n        //second click valid\n        console.log(\"moving second\");\n        nextSquares[movePiece] = null;\n        nextSquares[i] = \"X\";\n        setSquares(nextSquares);\n        setMovePiece(null);\n        setXIsNext(!xIsNext);\n        return;\n      }\n      return;\n    }\n    if (!xIsNext && oCount === 3) {\n      if (squares[i] === \"O\") {\n        setMovePiece(i); //first click, log this index\n      } else if (isValidMove(movePiece, i, nextSquares, \"O\")) {\n        //second click valid\n        console.log(\"moving second\");\n        nextSquares[movePiece] = null;\n        nextSquares[i] = \"O\";\n        setSquares(nextSquares);\n        setMovePiece(null);\n        setXIsNext(!xIsNext);\n        return;\n      }\n      return;\n    }\n    if (squares[i]) {\n      return;\n    }\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\"); //if xIsNext , next player is X, else it is O\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"80a2Z/gbNlOjUryznN55liGCJCk=\");\n_c2 = Board;\nfunction isValidMove(currIndex, moveIndex, squares, player) {\n  //checks to see if the second move is a valid move --> call this function on the second click\n  const possibleMoves = {\n    // 0:,1:....8: are the keys --> possible moves are the indexs in the list \n    0: [1, 3, 4],\n    1: [0, 2, 3, 4, 5],\n    2: [1, 4, 5],\n    3: [0, 1, 4, 6, 7],\n    4: [0, 1, 2, 3, 5, 6, 7, 8],\n    5: [1, 2, 4, 7, 8],\n    6: [3, 4, 7],\n    7: [3, 4, 5, 6, 8],\n    8: [4, 5, 7]\n  };\n  let check = possibleMoves[currIndex].includes(moveIndex); //finds the key of curr index, then checks to see if the index they want to move to is a valid box from that curr index\n  //calculate winner for center\n\n  if (check && squares[4] == player) {\n    //player occupies the center \n    const nextSquares = squares.splice();\n    nextSquares[currIndex] = null;\n    nextSquares[moveIndex] = player;\n    console.log(\"CENTER CENTER\");\n    return calculateWinner(nextSquares);\n  }\n  if (check && squares[moveIndex] == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2],\n  //top row\n  [3, 4, 5],\n  //middle row\n  [6, 7, 8],\n  //bottom row\n  [0, 3, 6],\n  //left column\n  [1, 4, 7],\n  //middle column\n  [2, 5, 8],\n  //right column\n  [0, 4, 8],\n  //diagonal (top-left to bottom-right)\n  [2, 4, 6] //diagonal (top-right to bottom-left)\n  ]; //refers to the possibilities of where a winner can win\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","xIsNext","setXIsNext","squares","setSquares","Array","fill","movePiece","setMovePiece","xCount","oCount","i","length","handleClick","calculateWinner","nextSquares","slice","console","log","isValidMove","winner","status","_c2","currIndex","moveIndex","player","possibleMoves","check","includes","splice","lines","a","b","c","$RefreshReg$"],"sources":["/Users/cocoli/Desktop/tic-tac-toe/src/App.js"],"sourcesContent":["// Chorus Lapilli\n\nimport { useState } from 'react';\n\nfunction Square({value ,onSquareClick}) {\n  return <button className=\"square\" onClick = {onSquareClick}>{value}</button>;\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [movePiece, setMovePiece] = useState(null);\n\n  let xCount = 0;\n  let oCount = 0;\n  for (let i = 0; i< squares.length; i++){ //helps check to make sure only 3 pieces are on the board \n    if (squares[i] == \"X\"){\n      xCount++\n    }\n    else if (squares[i] == \"O\"){\n      oCount++\n    }\n  }\n\n  function handleClick(i) {\n    if (calculateWinner(squares)) { //returns early if there is something on that square \n      return;\n    }\n\n    const nextSquares = squares.slice();\n\n    if (xIsNext && xCount === 3){\n      console.log(\"Move Piece:\", movePiece)\n      if(squares[i] === \"X\"){\n        setMovePiece(i) //first click, log this index\n      }\n      else if (isValidMove(movePiece,i,nextSquares,\"X\")){ //second click valid\n        console.log(\"moving second\")\n        nextSquares[movePiece] = null\n        nextSquares[i] = \"X\"\n        setSquares(nextSquares)\n        setMovePiece(null)\n        setXIsNext(!xIsNext)\n        return;\n      }\n      return \n    }\n    \n    if (!xIsNext && oCount === 3){\n      if(squares[i] === \"O\"){\n        setMovePiece(i) //first click, log this index\n      }\n      else if (isValidMove(movePiece,i,nextSquares,\"O\")){ //second click valid\n        console.log(\"moving second\")\n        nextSquares[movePiece] = null\n        nextSquares[i] = \"O\"\n        setSquares(nextSquares)\n        setMovePiece(null)\n        setXIsNext(!xIsNext)\n        return;\n      }\n      return \n    }\n\n    if (squares[i]){\n      return;\n    }\n\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\"); //if xIsNext , next player is X, else it is O\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\nfunction isValidMove (currIndex,moveIndex,squares,player){ //checks to see if the second move is a valid move --> call this function on the second click\n  const possibleMoves ={ // 0:,1:....8: are the keys --> possible moves are the indexs in the list \n    0:[1,3,4],\n    1:[0,2,3,4,5],\n    2:[1,4,5],\n    3:[0,1,4,6,7],\n    4:[0,1,2,3,5,6,7,8],\n    5:[1,2,4,7,8],\n    6:[3,4,7],\n    7:[3,4,5,6,8],\n    8:[4,5,7]\n  }; \n  let check = possibleMoves[currIndex].includes(moveIndex); //finds the key of curr index, then checks to see if the index they want to move to is a valid box from that curr index\n  //calculate winner for center\n\n  if (check && squares[4] == player){ //player occupies the center \n    const nextSquares = squares.splice() \n    nextSquares[currIndex] = null\n    nextSquares[moveIndex] = player\n    console.log(\"CENTER CENTER\")\n    return calculateWinner(nextSquares)\n  }\n\n  if (check && squares[moveIndex] == null){\n    return true\n  }\n  else{\n    return false\n  }\n\n}\n\nfunction calculateWinner (squares) {\n  const lines = [\n    [0, 1, 2],  //top row\n    [3, 4, 5],  //middle row\n    [6, 7, 8],  //bottom row\n    [0, 3, 6],  //left column\n    [1, 4, 7],  //middle column\n    [2, 5, 8],  //right column\n    [0, 4, 8],  //diagonal (top-left to bottom-right)\n    [2, 4, 6]   //diagonal (top-right to bottom-left)\n  ]; //refers to the possibilities of where a winner can win\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}